{
	"kind": "Program",
	"declarations": [
		{
			"kind": "ImportDeclaration",
			"identifier": {
				"kind": "Identifier",
				"name": "someFile"
			},
			"source": {
				"kind": "Path",
				"absolute": false,
				"path": "./some_file.joe",
				"isDir": false
			}
		},
		{
			"kind": "FunctionDeclaration",
			"modifiers": [],
			"name": {
				"kind": "Identifier",
				"name": "main"
			},
			"typeParams": [],
			"params": [],
			"returnTypes": [],
			"body": {
				"kind": "BlockStatement",
				"expressions": [
					{
						"kind": "VariableDeclaration",
						"modifiers": [],
						"mutable": false,
						"identifiersList": [
							{
								"kind": "Identifier",
								"name": "myFoo"
							}
						],
						"declaredTypes": [],
						"initialValues": [
							{
								"kind": "CallExpression",
								"callee": {
									"kind": "MemberExpression",
									"object": {
										"kind": "Identifier",
										"name": "Foo"
									},
									"property": {
										"kind": "Identifier",
										"name": "create"
									}
								},
								"args": []
							}
						],
						"inferredPossibleTypes": [
							[]
						]
					},
					{
						"kind": "PrintStatement",
						"expressions": [
							{
								"kind": "CallExpression",
								"callee": {
									"kind": "MemberExpression",
									"object": {
										"kind": "Identifier",
										"name": "myFoo"
									},
									"property": {
										"kind": "Identifier",
										"name": "foo"
									}
								},
								"args": []
							}
						]
					},
					{
						"kind": "PrintStatement",
						"expressions": [
							{
								"kind": "MemberExpression",
								"object": {
									"kind": "Identifier",
									"name": "Foo"
								},
								"property": {
									"kind": "Identifier",
									"name": "bar"
								}
							}
						]
					}
				]
			}
		},
		{
			"kind": "ClassDeclaration",
			"modifiers": [],
			"name": {
				"kind": "Identifier",
				"name": "Foo"
			},
			"typeParams": [
				{
					"kind": "Identifier",
					"name": "A"
				}
			],
			"extends": [
				{
					"kind": "TypeInstantiationExpression",
					"base": {
						"kind": "Identifier",
						"name": "Bar"
					},
					"typeArgs": [
						{
							"kind": "Identifier",
							"name": "A"
						}
					]
				},
				{
					"kind": "Identifier",
					"name": "Baz"
				}
			],
			"implements": [
				{
					"kind": "TypeInstantiationExpression",
					"base": {
						"kind": "Identifier",
						"name": "AbstractFooBar"
					},
					"typeArgs": [
						{
							"kind": "Identifier",
							"name": "A"
						}
					]
				},
				{
					"kind": "Identifier",
					"name": "AnotherAbstractClass"
				}
			],
			"body": {
				"kind": "BlockStatement",
				"expressions": [
					{
						"kind": "VariableDeclaration",
						"modifiers": [],
						"mutable": true,
						"identifiersList": [
							{
								"kind": "Identifier",
								"name": "bar"
							}
						],
						"declaredTypes": [],
						"initialValues": [
							{
								"kind": "StringLiteral",
								"value": "baz"
							}
						],
						"inferredPossibleTypes": [
							[
								{
									"kind": "TypePrimitive",
									"type": "string"
								}
							]
						]
					},
					{
						"kind": "VariableDeclaration",
						"modifiers": [],
						"mutable": false,
						"identifiersList": [
							{
								"kind": "Identifier",
								"name": "isDone?"
							}
						],
						"declaredTypes": [
							{
								"kind": "TypePrimitive",
								"type": "bool"
							}
						],
						"initialValues": [
							{
								"kind": "BoolLiteral",
								"value": true
							}
						],
						"inferredPossibleTypes": [
							[
								{
									"kind": "TypePrimitive",
									"type": "bool"
								}
							]
						]
					},
					{
						"kind": "FunctionDeclaration",
						"joeDoc": {
							"kind": "JoeDoc",
							"content": "/** method with no args */"
						},
						"modifiers": [],
						"name": {
							"kind": "Identifier",
							"name": "foo"
						},
						"typeParams": [],
						"params": [],
						"returnTypes": [
							{
								"kind": "TypeNumber",
								"size": "uint64"
							}
						],
						"body": {
							"kind": "BlockStatement",
							"expressions": [
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": false,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "size"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "WhenExpression",
											"expression": {
												"kind": "Identifier",
												"name": "someNumber"
											},
											"cases": [
												{
													"kind": "WhenCase",
													"values": [
														{
															"kind": "NumberLiteral",
															"value": 1,
															"possibleSizes": [
																"int8",
																"int16",
																"int32",
																"int64",
																"uint8",
																"uint16",
																"uint32",
																"uint64"
															]
														},
														{
															"kind": "NumberLiteral",
															"value": 2,
															"possibleSizes": [
																"int8",
																"int16",
																"int32",
																"int64",
																"uint8",
																"uint16",
																"uint32",
																"uint64"
															]
														}
													],
													"consequent": {
														"kind": "StringLiteral",
														"value": "small"
													}
												},
												{
													"kind": "WhenCase",
													"values": [
														{
															"kind": "RangeExpression",
															"lower": {
																"kind": "NumberLiteral",
																"value": 3,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															},
															"upper": {
																"kind": "NumberLiteral",
																"value": 10,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															}
														}
													],
													"consequent": {
														"kind": "StringLiteral",
														"value": "medium"
													}
												},
												{
													"kind": "WhenCase",
													"values": [
														{
															"kind": "NumberLiteral",
															"value": 11,
															"possibleSizes": [
																"int8",
																"int16",
																"int32",
																"int64",
																"uint8",
																"uint16",
																"uint32",
																"uint64"
															]
														}
													],
													"consequent": {
														"kind": "StringLiteral",
														"value": "large"
													}
												},
												{
													"kind": "WhenCase",
													"values": [
														{
															"kind": "RestElement"
														}
													],
													"consequent": {
														"kind": "StringLiteral",
														"value": "off the charts"
													}
												}
											]
										}
									],
									"inferredPossibleTypes": [
										[]
									]
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": true,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "myArray"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "ArrayExpression",
											"items": [
												{
													"kind": "NumberLiteral",
													"value": 1,
													"possibleSizes": [
														"int8",
														"int16",
														"int32",
														"int64",
														"uint8",
														"uint16",
														"uint32",
														"uint64"
													]
												},
												{
													"kind": "PostfixIfStatement",
													"expression": {
														"kind": "NumberLiteral",
														"value": 10,
														"possibleSizes": [
															"int8",
															"int16",
															"int32",
															"int64",
															"uint8",
															"uint16",
															"uint32",
															"uint64"
														]
													},
													"test": {
														"kind": "MemberExpression",
														"object": {
															"kind": "ThisKeyword"
														},
														"property": {
															"kind": "Identifier",
															"name": "isDone?"
														}
													}
												},
												{
													"kind": "NumberLiteral",
													"value": 3,
													"possibleSizes": [
														"int8",
														"int16",
														"int32",
														"int64",
														"uint8",
														"uint16",
														"uint32",
														"uint64"
													]
												}
											],
											"possibleTypes": [
												{
													"kind": "TypeNumber",
													"size": "int8"
												},
												{
													"kind": "TypeNumber",
													"size": "int16"
												},
												{
													"kind": "TypeNumber",
													"size": "int32"
												},
												{
													"kind": "TypeNumber",
													"size": "int64"
												},
												{
													"kind": "TypeNumber",
													"size": "uint8"
												},
												{
													"kind": "TypeNumber",
													"size": "uint16"
												},
												{
													"kind": "TypeNumber",
													"size": "uint32"
												},
												{
													"kind": "TypeNumber",
													"size": "uint64"
												}
											]
										}
									],
									"inferredPossibleTypes": [
										[
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "int8"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "int16"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "int32"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "int64"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "uint8"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "uint16"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "uint32"
												}
											},
											{
												"kind": "ArrayOf",
												"type": {
													"kind": "TypeNumber",
													"size": "uint64"
												}
											}
										]
									]
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": true,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "count"
										},
										{
											"kind": "Identifier",
											"name": "countDown"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "RangeExpression",
											"lower": {
												"kind": "NumberLiteral",
												"value": 1,
												"possibleSizes": [
													"int8",
													"int16",
													"int32",
													"int64",
													"uint8",
													"uint16",
													"uint32",
													"uint64"
												]
											},
											"upper": {
												"kind": "MemberExpression",
												"object": {
													"kind": "Identifier",
													"name": "myArray"
												},
												"property": {
													"kind": "NumberLiteral",
													"value": 2,
													"possibleSizes": [
														"int8",
														"int16",
														"int32",
														"int64",
														"uint8",
														"uint16",
														"uint32",
														"uint64"
													]
												}
											}
										},
										{
											"kind": "RangeExpression",
											"lower": {
												"kind": "MemberExpression",
												"object": {
													"kind": "Identifier",
													"name": "myArray"
												},
												"property": {
													"kind": "NumberLiteral",
													"value": 1,
													"possibleSizes": [
														"int8",
														"int16",
														"int32",
														"int64",
														"uint8",
														"uint16",
														"uint32",
														"uint64"
													]
												}
											},
											"upper": {
												"kind": "NumberLiteral",
												"value": 0,
												"possibleSizes": [
													"int8",
													"int16",
													"int32",
													"int64",
													"uint8",
													"uint16",
													"uint32",
													"uint64"
												]
											}
										}
									],
									"inferredPossibleTypes": [
										[
											{
												"kind": "TypeRange"
											}
										],
										[
											{
												"kind": "TypeRange"
											}
										]
									]
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": true,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "partitionedArray"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "ArrayExpression",
											"items": [
												{
													"kind": "MemberListExpression",
													"object": {
														"kind": "Identifier",
														"name": "countDown"
													},
													"properties": [
														{
															"kind": "RangeExpression",
															"lower": {
																"kind": "NumberLiteral",
																"value": 0,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															},
															"upper": {
																"kind": "NumberLiteral",
																"value": 1,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															}
														}
													]
												},
												{
													"kind": "MemberListExpression",
													"object": {
														"kind": "Identifier",
														"name": "countDown"
													},
													"properties": [
														{
															"kind": "RangeExpression",
															"lower": {
																"kind": "NumberLiteral",
																"value": 2,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															},
															"upper": {
																"kind": "NumberLiteral",
																"value": 6,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															}
														}
													]
												},
												{
													"kind": "MemberListExpression",
													"object": {
														"kind": "Identifier",
														"name": "countDown"
													},
													"properties": [
														{
															"kind": "RangeExpression",
															"lower": {
																"kind": "NumberLiteral",
																"value": 7,
																"possibleSizes": [
																	"int8",
																	"int16",
																	"int32",
																	"int64",
																	"uint8",
																	"uint16",
																	"uint32",
																	"uint64"
																]
															},
															"upper": {
																"kind": "UnaryExpression",
																"before": true,
																"operator": "-",
																"operand": {
																	"kind": "NumberLiteral",
																	"value": 1,
																	"possibleSizes": [
																		"int8",
																		"int16",
																		"int32",
																		"int64"
																	]
																}
															}
														}
													]
												}
											],
											"possibleTypes": []
										}
									],
									"inferredPossibleTypes": [
										[]
									]
								},
								{
									"kind": "ForStatement",
									"initializer": {
										"kind": "VariableDeclaration",
										"modifiers": [],
										"mutable": false,
										"identifiersList": [
											{
												"kind": "Identifier",
												"name": "num"
											}
										],
										"declaredTypes": [],
										"initialValues": [],
										"inferredPossibleTypes": []
									},
									"iterable": {
										"kind": "MemberListExpression",
										"object": {
											"kind": "Identifier",
											"name": "countDown"
										},
										"properties": [
											{
												"kind": "NumberLiteral",
												"value": 1,
												"possibleSizes": [
													"int8",
													"int16",
													"int32",
													"int64",
													"uint8",
													"uint16",
													"uint32",
													"uint64"
												]
											},
											{
												"kind": "NumberLiteral",
												"value": 4,
												"possibleSizes": [
													"int8",
													"int16",
													"int32",
													"int64",
													"uint8",
													"uint16",
													"uint32",
													"uint64"
												]
											},
											{
												"kind": "NumberLiteral",
												"value": 9,
												"possibleSizes": [
													"int8",
													"int16",
													"int32",
													"int64",
													"uint8",
													"uint16",
													"uint32",
													"uint64"
												]
											}
										]
									},
									"body": {
										"kind": "BlockStatement",
										"expressions": [
											{
												"kind": "PrintStatement",
												"expressions": [
													{
														"kind": "Identifier",
														"name": "num"
													}
												]
											}
										]
									}
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": true,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "myObject"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "ObjectExpression",
											"properties": [
												{
													"kind": "Property",
													"key": {
														"kind": "Identifier",
														"name": "a"
													},
													"value": {
														"kind": "NumberLiteral",
														"value": 1,
														"possibleSizes": [
															"int8",
															"int16",
															"int32",
															"int64",
															"uint8",
															"uint16",
															"uint32",
															"uint64"
														]
													}
												},
												{
													"kind": "Property",
													"key": {
														"kind": "Identifier",
														"name": "b"
													},
													"value": {
														"kind": "StringLiteral",
														"value": "coat"
													}
												},
												{
													"kind": "Property",
													"key": {
														"kind": "Identifier",
														"name": "c"
													},
													"value": {
														"kind": "TernaryExpression",
														"test": {
															"kind": "TernaryCondition",
															"expression": {
																"kind": "Identifier",
																"name": "cond"
															}
														},
														"consequent": {
															"kind": "TernaryConsequent",
															"value": {
																"kind": "BoolLiteral",
																"value": true
															}
														},
														"alternate": {
															"kind": "TernaryAlternate",
															"value": {
																"kind": "BoolLiteral",
																"value": false
															}
														}
													}
												}
											]
										}
									],
									"inferredPossibleTypes": [
										[
											{
												"kind": "ObjectShape",
												"properties": [
													{
														"kind": "PropertyShape",
														"key": {
															"kind": "Identifier",
															"name": "a"
														},
														"possibleTypes": [
															{
																"kind": "TypeNumber",
																"size": "int8"
															},
															{
																"kind": "TypeNumber",
																"size": "int16"
															},
															{
																"kind": "TypeNumber",
																"size": "int32"
															},
															{
																"kind": "TypeNumber",
																"size": "int64"
															},
															{
																"kind": "TypeNumber",
																"size": "uint8"
															},
															{
																"kind": "TypeNumber",
																"size": "uint16"
															},
															{
																"kind": "TypeNumber",
																"size": "uint32"
															},
															{
																"kind": "TypeNumber",
																"size": "uint64"
															}
														]
													},
													{
														"kind": "PropertyShape",
														"key": {
															"kind": "Identifier",
															"name": "b"
														},
														"possibleTypes": [
															{
																"kind": "TypePrimitive",
																"type": "string"
															}
														]
													},
													{
														"kind": "PropertyShape",
														"key": {
															"kind": "Identifier",
															"name": "c"
														},
														"possibleTypes": [
															{
																"kind": "TypePrimitive",
																"type": "bool"
															}
														]
													}
												]
											}
										]
									]
								},
								{
									"kind": "LoopStatement",
									"body": {
										"kind": "BlockStatement",
										"expressions": [
											{
												"kind": "NextStatement"
											},
											{
												"kind": "DoneStatement"
											}
										]
									}
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": false,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "myBool"
										},
										{
											"kind": "Identifier",
											"name": "myNumber"
										},
										{
											"kind": "Identifier",
											"name": "myThing"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "CallExpression",
											"callee": {
												"kind": "Identifier",
												"name": "methodThatReturnsBool?"
											},
											"args": []
										}
									],
									"inferredPossibleTypes": [
										[]
									]
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": false,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "myTuple"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "TupleExpression",
											"items": [
												{
													"kind": "NumberLiteral",
													"value": 1,
													"possibleSizes": [
														"int8",
														"int16",
														"int32",
														"int64",
														"uint8",
														"uint16",
														"uint32",
														"uint64"
													]
												},
												{
													"kind": "BoolLiteral",
													"value": true
												},
												{
													"kind": "StringLiteral",
													"value": "string"
												},
												{
													"kind": "Path",
													"absolute": true,
													"path": "@/foo",
													"isDir": false
												}
											]
										}
									],
									"inferredPossibleTypes": [
										[
											{
												"kind": "TupleShape",
												"possibleTypes": [
													[
														{
															"kind": "TypeNumber",
															"size": "int8"
														},
														{
															"kind": "TypeNumber",
															"size": "int16"
														},
														{
															"kind": "TypeNumber",
															"size": "int32"
														},
														{
															"kind": "TypeNumber",
															"size": "int64"
														},
														{
															"kind": "TypeNumber",
															"size": "uint8"
														},
														{
															"kind": "TypeNumber",
															"size": "uint16"
														},
														{
															"kind": "TypeNumber",
															"size": "uint32"
														},
														{
															"kind": "TypeNumber",
															"size": "uint64"
														}
													],
													[
														{
															"kind": "TypePrimitive",
															"type": "bool"
														}
													],
													[
														{
															"kind": "TypePrimitive",
															"type": "string"
														}
													],
													[
														{
															"kind": "TypePrimitive",
															"type": "path"
														}
													]
												]
											}
										]
									]
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": true,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "partialObj"
										}
									],
									"declaredTypes": [],
									"initialValues": [
										{
											"kind": "MemberListExpression",
											"object": {
												"kind": "Identifier",
												"name": "myObject"
											},
											"properties": [
												{
													"kind": "Identifier",
													"name": "a"
												},
												{
													"kind": "Identifier",
													"name": "d"
												}
											]
										}
									],
									"inferredPossibleTypes": [
										[]
									]
								},
								{
									"kind": "VariableDeclaration",
									"modifiers": [],
									"mutable": true,
									"identifiersList": [
										{
											"kind": "Identifier",
											"name": "initializeAndAssignLater"
										}
									],
									"declaredTypes": [
										{
											"kind": "TypeNumber",
											"size": "int32"
										}
									],
									"initialValues": [],
									"inferredPossibleTypes": []
								},
								{
									"kind": "AssignmentExpression",
									"left": [
										{
											"kind": "Identifier",
											"name": "initializeAndAssignLater"
										}
									],
									"right": [
										{
											"kind": "NumberLiteral",
											"value": 5,
											"possibleSizes": [
												"int8",
												"int16",
												"int32",
												"int64",
												"uint8",
												"uint16",
												"uint32",
												"uint64"
											]
										}
									]
								},
								{
									"kind": "ReturnStatement",
									"expressions": [
										{
											"kind": "Identifier",
											"name": "initializeAndAssignLater"
										}
									]
								}
							]
						}
					},
					{
						"kind": "FunctionDeclaration",
						"joeDoc": {
							"kind": "JoeDoc",
							"content": "/** with args */"
						},
						"modifiers": [],
						"name": {
							"kind": "Identifier",
							"name": "methodWithArgs"
						},
						"typeParams": [],
						"params": [
							{
								"kind": "Parameter",
								"modifiers": [],
								"isRest": false,
								"name": {
									"kind": "Identifier",
									"name": "arg1"
								},
								"declaredType": {
									"kind": "TypePrimitive",
									"type": "bool"
								},
								"inferredPossibleTypes": []
							},
							{
								"kind": "Parameter",
								"modifiers": [],
								"isRest": false,
								"name": {
									"kind": "Identifier",
									"name": "arg2"
								},
								"declaredType": {
									"kind": "Identifier",
									"name": "Tuple"
								},
								"inferredPossibleTypes": []
							},
							{
								"kind": "Parameter",
								"modifiers": [],
								"isRest": false,
								"name": {
									"kind": "Identifier",
									"name": "arg3"
								},
								"inferredPossibleTypes": [
									{
										"kind": "TypePrimitive",
										"type": "bool"
									}
								],
								"defaultValue": {
									"kind": "BoolLiteral",
									"value": true
								}
							},
							{
								"kind": "Parameter",
								"modifiers": [],
								"isRest": true,
								"name": {
									"kind": "Identifier",
									"name": "otherStuff"
								},
								"declaredType": {
									"kind": "ArrayOf",
									"type": {
										"kind": "Identifier",
										"name": "Thing"
									}
								},
								"inferredPossibleTypes": []
							}
						],
						"returnTypes": [],
						"body": {
							"kind": "BlockStatement",
							"expressions": []
						}
					},
					{
						"kind": "FunctionDeclaration",
						"joeDoc": {
							"kind": "JoeDoc",
							"content": "/** with one return val */"
						},
						"modifiers": [],
						"name": {
							"kind": "Identifier",
							"name": "methodThatReturnsBool?"
						},
						"typeParams": [],
						"params": [],
						"returnTypes": [
							{
								"kind": "TypePrimitive",
								"type": "bool"
							}
						],
						"body": {
							"kind": "BlockStatement",
							"expressions": [
								{
									"kind": "ReturnStatement",
									"expressions": [
										{
											"kind": "BoolLiteral",
											"value": true
										}
									]
								}
							]
						}
					},
					{
						"kind": "FunctionDeclaration",
						"joeDoc": {
							"kind": "JoeDoc",
							"content": "/** multiple return vals */"
						},
						"modifiers": [],
						"name": {
							"kind": "Identifier",
							"name": "methodThatReturnsBool?"
						},
						"typeParams": [],
						"params": [],
						"returnTypes": [
							{
								"kind": "TypePrimitive",
								"type": "bool"
							},
							{
								"kind": "TypeNumber",
								"size": "dec32"
							},
							{
								"kind": "Identifier",
								"name": "Thing"
							}
						],
						"body": {
							"kind": "BlockStatement",
							"expressions": [
								{
									"kind": "ReturnStatement",
									"expressions": [
										{
											"kind": "BoolLiteral",
											"value": false
										},
										{
											"kind": "NumberLiteral",
											"value": 5,
											"possibleSizes": [
												"dec32",
												"dec64"
											]
										},
										{
											"kind": "CallExpression",
											"callee": {
												"kind": "MemberExpression",
												"object": {
													"kind": "Identifier",
													"name": "Thing"
												},
												"property": {
													"kind": "Identifier",
													"name": "create"
												}
											},
											"args": []
										}
									]
								}
							]
						}
					}
				]
			}
		}
	]
}