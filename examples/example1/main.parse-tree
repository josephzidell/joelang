[
  [
    'Program',
    [
      [
        'Comment',
        '# This is sample .joe file to prove the lexer and parser works.',
        [length]: 2
      ],
      [
        'Comment',
        '# Note this file may not necessarily be syntatically correct.',
        [length]: 2
      ],
      [
        'FunctionDefinition',
        [
          [ 'Identifier', 'main', [length]: 2 ],
          [
            'BlockStatement',
            [
              [
                'Comment',
                '// instantiate and call a method',
                [length]: 2
              ],
              [
                'VariableDeclaration',
                'const',
                [
                  [ 'Identifier', 'myFoo', [length]: 2 ],
                  [ 'AssignmentOperator', '=', [length]: 2 ],
                  [ 'Keyword', 'new', [length]: 2 ],
                  [
                    'CallExpression',
                    [
                      [ 'Identifier', 'Foo', [length]: 2 ],
                      [ 'ArgumentsList', [ [length]: 0 ], [length]: 2 ],
                      [length]: 2
                    ],
                    [length]: 2
                  ],
                  [length]: 4
                ],
                [length]: 3
              ],
              [ 'SemicolonSeparator', [length]: 1 ],
              [
                'PrintStatement',
                [
                  [ 'Identifier', 'myFoo', [length]: 2 ],
                  [ 'Unknown', '.', [length]: 2 ],
                  [
                    'CallExpression',
                    [
                      [ 'Identifier', 'foo', [length]: 2 ],
                      [ 'ArgumentsList', [ [length]: 0 ], [length]: 2 ],
                      [length]: 2
                    ],
                    [length]: 2
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [ 'Comment', '// static', [length]: 2 ],
                  [
                    'PrintStatement',
                    [
                      [ 'Identifier', 'Foo', [length]: 2 ],
                      [ 'Unknown', '.', [length]: 2 ],
                      [ 'Identifier', 'bar', [length]: 2 ],
                      [length]: 3
                    ],
                    [length]: 2
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [length]: 7
                ],
                [length]: 2
              ],
              [ 'Keyword', 'class', [length]: 2 ],
              [ 'Identifier', 'Foo', [length]: 2 ],
              [ 'Keyword', 'extends', [length]: 2 ],
              [ 'Identifier', 'Bar', [length]: 2 ],
              [ 'CommaSeparator', [length]: 1 ],
              [ 'Identifier', 'Baz', [length]: 2 ],
              [ 'Keyword', 'implements', [length]: 2 ],
              [ 'Identifier', 'AbstractFooBar', [length]: 2 ],
              [ 'CommaSeparator', [length]: 1 ],
              [ 'Identifier', 'AnotherAbstractClass', [length]: 2 ],
              [
                'BlockStatement',
                [
                  [ 'Keyword', 'static', [length]: 2 ],
                  [ 'Identifier', 'bar', [length]: 2 ],
                  [ 'AssignmentOperator', '=', [length]: 2 ],
                  [ 'StringLiteral', 'baz', [length]: 2 ],
                  [length]: 4
                ],
                [length]: 2
              ],
              [ 'SemicolonSeparator', [length]: 1 ],
              [ 'Comment', '// public static property', [length]: 2 ],
              [ 'Keyword', 'private', [length]: 2 ],
              [ 'Identifier', 'isDone?', [length]: 2 ],
              [ 'AssignmentOperator', '=', [length]: 2 ],
              [ 'BoolLiteral', 'true', [length]: 2 ],
              [
                'Comment',
                '// private instance property',
                [length]: 2
              ],
              [
                'Comment',
                '/** method with no args and no return */',
                [length]: 2
              ],
              [ 'Identifier', 'foo', [length]: 2 ],
              [ 'RightArrowOperator', '->', [length]: 2 ],
              [ 'Type', 'number', [length]: 2 ],
              [
                'BlockStatement',
                [
                  [
                    'VariableDeclaration',
                    'const',
                    [
                      [ 'Identifier', 'size', [length]: 2 ],
                      [ 'AssignmentOperator', '=', [length]: 2 ],
                      [
                        'WhenExpression',
                        [
                          [ 'Identifier', 'someNumber', [length]: 2 ],
                          [
                            'BlockStatement',
                            [
                              [
                                'WhenCase',
                                [
                                  [
                                    'WhenCaseTests',
                                    [
                                      [
                                        'NumberLiteral',
                                        '1',
                                        [length]: 2
                                      ],
                                      [ 'CommaSeparator', [length]: 1 ],
                                      [
                                        'NumberLiteral',
                                        '2',
                                        [length]: 2
                                      ],
                                      [length]: 3
                                    ],
                                    [length]: 2
                                  ],
                                  [
                                    'WhenCaseConsequent',
                                    [
                                      [
                                        'StringLiteral',
                                        'small',
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [length]: 2
                                ],
                                [length]: 2
                              ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [
                                'WhenCase',
                                [
                                  [
                                    'WhenCaseTests',
                                    [
                                      [
                                        'RangeExpression',
                                        [
                                          [
                                            'NumberLiteral',
                                            '3',
                                            [length]: 2
                                          ],
                                          [
                                            'NumberLiteral',
                                            '10',
                                            [length]: 2
                                          ],
                                          [length]: 2
                                        ],
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [
                                    'WhenCaseConsequent',
                                    [
                                      [
                                        'StringLiteral',
                                        'medium',
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [length]: 2
                                ],
                                [length]: 2
                              ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [
                                'WhenCase',
                                [
                                  [
                                    'WhenCaseTests',
                                    [
                                      [
                                        'NumberLiteral',
                                        '11',
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [
                                    'WhenCaseConsequent',
                                    [
                                      [
                                        'StringLiteral',
                                        'large',
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [length]: 2
                                ],
                                [length]: 2
                              ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [
                                'WhenCase',
                                [
                                  [
                                    'WhenCaseTests',
                                    [
                                      [
                                        'RestElement',
                                        '...',
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [
                                    'WhenCaseConsequent',
                                    [
                                      [
                                        'StringLiteral',
                                        'off the charts',
                                        [length]: 2
                                      ],
                                      [length]: 1
                                    ],
                                    [length]: 2
                                  ],
                                  [length]: 2
                                ],
                                [length]: 2
                              ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [length]: 8
                            ],
                            [length]: 2
                          ],
                          [
                            'VariableDeclaration',
                            'let',
                            [
                              [ 'Identifier', 'myArray', [length]: 2 ],
                              [
                                'AssignmentOperator',
                                '=',
                                [length]: 2
                              ],
                              [
                                'ArrayExpression',
                                [
                                  [ 'NumberLiteral', '1', [length]: 2 ],
                                  [ 'CommaSeparator', [length]: 1 ],
                                  [
                                    'NumberLiteral',
                                    '10',
                                    [length]: 2
                                  ],
                                  [ 'Keyword', 'if', [length]: 2 ],
                                  [ 'Keyword', 'this', [length]: 2 ],
                                  [ 'Unknown', '.', [length]: 2 ],
                                  [
                                    'Identifier',
                                    'isDone?',
                                    [length]: 2
                                  ],
                                  [ 'CommaSeparator', [length]: 1 ],
                                  [
                                    'Comment',
                                    '// if false, element will not be in array',
                                    [length]: 2
                                  ],
                                  [ 'NumberLiteral', '3', [length]: 2 ],
                                  [length]: 10
                                ],
                                [length]: 2
                              ],
                              [length]: 3
                            ],
                            [length]: 3
                          ],
                          [length]: 3
                        ],
                        [length]: 2
                      ],
                      [length]: 3
                    ],
                    [length]: 3
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [
                    'VariableDeclaration',
                    'let',
                    [
                      [ 'Identifier', 'count', [length]: 2 ],
                      [ 'AssignmentOperator', '=', [length]: 2 ],
                      [
                        'RangeExpression',
                        [
                          [ 'NumberLiteral', '1', [length]: 2 ],
                          [
                            'MemberExpression',
                            [
                              [ 'Identifier', 'myArray', [length]: 2 ],
                              [
                                'MembersList',
                                [
                                  [ 'NumberLiteral', '2', [length]: 2 ],
                                  [length]: 1
                                ],
                                [length]: 2
                              ],
                              [
                                'Comment',
                                '// new array [1, 2, 3]',
                                [length]: 2
                              ],
                              [
                                'VariableDeclaration',
                                'let',
                                [
                                  [
                                    'Identifier',
                                    'countDown',
                                    [length]: 2
                                  ],
                                  [
                                    'AssignmentOperator',
                                    '=',
                                    [length]: 2
                                  ],
                                  [
                                    'MemberExpression',
                                    [
                                      [
                                        'Identifier',
                                        'myArray',
                                        [length]: 2
                                      ],
                                      [
                                        'RangeExpression',
                                        [
                                          [
                                            'MembersList',
                                            [
                                              [
                                                'NumberLiteral',
                                                '1',
                                                [length]: 2
                                              ],
                                              [length]: 1
                                            ],
                                            [length]: 2
                                          ],
                                          [
                                            'NumberLiteral',
                                            '0',
                                            [length]: 2
                                          ],
                                          [length]: 2
                                        ],
                                        [length]: 2
                                      ],
                                      [
                                        'Comment',
                                        '// new array [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]',
                                        [length]: 2
                                      ],
                                      [
                                        'VariableDeclaration',
                                        'let',
                                        [
                                          [
                                            'Identifier',
                                            'partitionedArray',
                                            [length]: 2
                                          ],
                                          [
                                            'AssignmentOperator',
                                            '=',
                                            [length]: 2
                                          ],
                                          [
                                            'ArrayExpression',
                                            [
                                              [
                                                'MemberExpression',
                                                [
                                                  [
                                                    'Identifier',
                                                    'countDown',
                                                    [length]: 2
                                                  ],
                                                  [
                                                    'MembersList',
                                                    [
                                                      [
                                                        'ColonSeparator',
                                                        [length]: 1
                                                      ],
                                                      [
                                                        'NumberLiteral',
                                                        '1',
                                                        [length]: 2
                                                      ],
                                                      [length]: 2
                                                    ],
                                                    [length]: 2
                                                  ],
                                                  [
                                                    'CommaSeparator',
                                                    [length]: 1
                                                  ],
                                                  [
                                                    'MemberExpression',
                                                    [
                                                      [
                                                        'Identifier',
                                                        'countDown',
                                                        [length]: 2
                                                      ],
                                                      [
                                                        'MembersList',
                                                        [
                                                          [
                                                            'NumberLiteral',
                                                            '2',
                                                            [length]: 2
                                                          ],
                                                          [
                                                            'ColonSeparator',
                                                            [length]: 1
                                                          ],
                                                          [
                                                            'NumberLiteral',
                                                            '6',
                                                            [length]: 2
                                                          ],
                                                          [length]: 3
                                                        ],
                                                        [length]: 2
                                                      ],
                                                      [
                                                        'CommaSeparator',
                                                        [length]: 1
                                                      ],
                                                      [
                                                        'MemberExpression',
                                                        [
                                                          [
                                                            'Identifier',
                                                            'countDown',
                                                            [length]: 2
                                                          ],
                                                          [
                                                            'MembersList',
                                                            [
                                                              [
                                                                'NumberLiteral',
                                                                '7',
                                                                [length]: 2
                                                              ],
                                                              [
                                                                'ColonSeparator',
                                                                [length]: 1
                                                              ],
                                                              [length]: 2
                                                            ],
                                                            [length]: 2
                                                          ],
                                                          [
                                                            'CommaSeparator',
                                                            [length]: 1
                                                          ],
                                                          [length]: 3
                                                        ],
                                                        [length]: 2
                                                      ],
                                                      [length]: 4
                                                    ],
                                                    [length]: 2
                                                  ],
                                                  [length]: 4
                                                ],
                                                [length]: 2
                                              ],
                                              [length]: 1
                                            ],
                                            [length]: 2
                                          ],
                                          [length]: 3
                                        ],
                                        [length]: 3
                                      ],
                                      [length]: 4
                                    ],
                                    [length]: 2
                                  ],
                                  [length]: 3
                                ],
                                [length]: 3
                              ],
                              [length]: 4
                            ],
                            [length]: 2
                          ],
                          [length]: 2
                        ],
                        [length]: 2
                      ],
                      [length]: 3
                    ],
                    [length]: 3
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [
                    'Comment',
                    '// new nested Arrays [[10, 9], [8, 7, 6, 5, 4], [3, 2, 1, 0]]',
                    [length]: 2
                  ],
                  [
                    'VariableDeclaration',
                    'let',
                    [
                      [
                        'Identifier',
                        'selectedArrayItems',
                        [length]: 2
                      ],
                      [ 'AssignmentOperator', '=', [length]: 2 ],
                      [
                        'MemberExpression',
                        [
                          [ 'Identifier', 'countDown', [length]: 2 ],
                          [
                            'MembersList',
                            [
                              [ 'NumberLiteral', '1', [length]: 2 ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [ 'NumberLiteral', '4', [length]: 2 ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [ 'NumberLiteral', '9', [length]: 2 ],
                              [length]: 5
                            ],
                            [length]: 2
                          ],
                          [
                            'Comment',
                            '// new array [9, 6, 1]',
                            [length]: 2
                          ],
                          [
                            'VariableDeclaration',
                            'let',
                            [
                              [ 'Identifier', 'myObject', [length]: 2 ],
                              [
                                'AssignmentOperator',
                                '=',
                                [length]: 2
                              ],
                              [
                                'BlockStatement',
                                [
                                  [ 'Identifier', 'a', [length]: 2 ],
                                  [ 'ColonSeparator', [length]: 1 ],
                                  [ 'NumberLiteral', '1', [length]: 2 ],
                                  [ 'CommaSeparator', [length]: 1 ],
                                  [ 'Identifier', 'b', [length]: 2 ],
                                  [ 'ColonSeparator', [length]: 1 ],
                                  [
                                    'StringLiteral',
                                    'coat',
                                    [length]: 2
                                  ],
                                  [ 'Keyword', 'if', [length]: 2 ],
                                  [ 'Keyword', 'this', [length]: 2 ],
                                  [ 'Unknown', '.', [length]: 2 ],
                                  [
                                    'Identifier',
                                    'isDone?',
                                    [length]: 2
                                  ],
                                  [ 'CommaSeparator', [length]: 1 ],
                                  [
                                    'Comment',
                                    '// if false, property will not be in object',
                                    [length]: 2
                                  ],
                                  [ 'Identifier', 'c', [length]: 2 ],
                                  [ 'ColonSeparator', [length]: 1 ],
                                  [ 'Identifier', 'cond', [length]: 2 ],
                                  [ 'Unknown', '?', [length]: 2 ],
                                  [
                                    'BoolLiteral',
                                    'true',
                                    [length]: 2
                                  ],
                                  [ 'ColonSeparator', [length]: 1 ],
                                  [
                                    'BoolLiteral',
                                    'false',
                                    [length]: 2
                                  ],
                                  [ 'CommaSeparator', [length]: 1 ],
                                  [
                                    'Comment',
                                    '// regular ternary - property will always be there, value differs',
                                    [length]: 2
                                  ],
                                  [ 'Identifier', 'd', [length]: 2 ],
                                  [ 'ColonSeparator', [length]: 1 ],
                                  [ 'Nil', 'nil', [length]: 2 ],
                                  [ 'CommaSeparator', [length]: 1 ],
                                  [length]: 26
                                ],
                                [length]: 2
                              ],
                              [length]: 3
                            ],
                            [length]: 3
                          ],
                          [length]: 4
                        ],
                        [length]: 2
                      ],
                      [length]: 3
                    ],
                    [length]: 3
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [
                    'VariableDeclaration',
                    'let',
                    [
                      [ 'Identifier', 'partialObj', [length]: 2 ],
                      [ 'AssignmentOperator', '=', [length]: 2 ],
                      [
                        'MemberExpression',
                        [
                          [ 'Identifier', 'myObject', [length]: 2 ],
                          [
                            'MembersList',
                            [
                              [ 'Identifier', 'a', [length]: 2 ],
                              [ 'CommaSeparator', [length]: 1 ],
                              [ 'Identifier', 'd', [length]: 2 ],
                              [length]: 3
                            ],
                            [length]: 2
                          ],
                          [
                            'Comment',
                            '// new object {a: 1, d: nil}',
                            [length]: 2
                          ],
                          [
                            'VariableDeclaration',
                            'const',
                            [
                              [
                                'Identifier',
                                'initializeAndAssignLater',
                                [length]: 2
                              ],
                              [ 'ColonSeparator', [length]: 1 ],
                              [ 'Type', 'number', [length]: 2 ],
                              [
                                'AssignmentOperator',
                                '=',
                                [length]: 2
                              ],
                              [ 'NumberLiteral', '5', [length]: 2 ],
                              [length]: 5
                            ],
                            [length]: 3
                          ],
                          [length]: 4
                        ],
                        [length]: 2
                      ],
                      [length]: 3
                    ],
                    [length]: 3
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [
                    'ReturnStatement',
                    [
                      [
                        'Identifier',
                        'initializeAndAssignLater',
                        [length]: 2
                      ],
                      [length]: 1
                    ],
                    [length]: 2
                  ],
                  [ 'SemicolonSeparator', [length]: 1 ],
                  [length]: 11
                ],
                [length]: 2
              ],
              [ 'Comment', '/** with args */', [length]: 2 ],
              [
                'CallExpression',
                [
                  [ 'Identifier', 'methodWithArgs', [length]: 2 ],
                  [
                    'ArgumentsList',
                    [
                      [ 'Identifier', 'arg1', [length]: 2 ],
                      [ 'ColonSeparator', [length]: 1 ],
                      [ 'Type', 'bool', [length]: 2 ],
                      [ 'CommaSeparator', [length]: 1 ],
                      [ 'Identifier', 'arg2', [length]: 2 ],
                      [ 'ColonSeparator', [length]: 1 ],
                      [ 'Identifier', 'Tuple', [length]: 2 ],
                      [ 'CommaSeparator', [length]: 1 ],
                      [ 'Identifier', 'arg3', [length]: 2 ],
                      [ 'AssignmentOperator', '=', [length]: 2 ],
                      [ 'BoolLiteral', 'true', [length]: 2 ],
                      [ 'CommaSeparator', [length]: 1 ],
                      [ 'RestElement', '...', [length]: 2 ],
                      [ 'Identifier', 'otherStuff', [length]: 2 ],
                      [ 'ColonSeparator', [length]: 1 ],
                      [
                        'ArrayType',
                        [
                          [ 'Identifier', 'Thing', [length]: 2 ],
                          [length]: 1
                        ],
                        [length]: 2
                      ],
                      [length]: 16
                    ],
                    [length]: 2
                  ],
                  [
                    'BlockStatement',
                    [
                      [ 'RestElement', '...', [length]: 2 ],
                      [length]: 1
                    ],
                    [length]: 2
                  ],
                  [
                    'Comment',
                    '/** with one return val */',
                    [length]: 2
                  ],
                  [
                    'Identifier',
                    'methodThatReturnsBool?',
                    [length]: 2
                  ],
                  [ 'ColonSeparator', [length]: 1 ],
                  [ 'Type', 'bool', [length]: 2 ],
                  [
                    'BlockStatement',
                    [
                      [
                        'ReturnStatement',
                        [
                          [ 'BoolLiteral', 'true', [length]: 2 ],
                          [length]: 1
                        ],
                        [length]: 2
                      ],
                      [ 'SemicolonSeparator', [length]: 1 ],
                      [length]: 2
                    ],
                    [length]: 2
                  ],
                  [
                    'Comment',
                    '/** multiple return vals */',
                    [length]: 2
                  ],
                  [
                    'Identifier',
                    'methodThatReturnsBool?',
                    [length]: 2
                  ],
                  [ 'ColonSeparator', [length]: 1 ],
                  [ 'Type', 'bool', [length]: 2 ],
                  [ 'CommaSeparator', [length]: 1 ],
                  [ 'Type', 'number', [length]: 2 ],
                  [ 'CommaSeparator', [length]: 1 ],
                  [ 'Identifier', 'Thing', [length]: 2 ],
                  [
                    'BlockStatement',
                    [
                      [
                        'ReturnStatement',
                        [
                          [ 'BoolLiteral', 'false', [length]: 2 ],
                          [ 'CommaSeparator', [length]: 1 ],
                          [ 'NumberLiteral', '5', [length]: 2 ],
                          [ 'CommaSeparator', [length]: 1 ],
                          [ 'Keyword', 'new', [length]: 2 ],
                          [
                            'CallExpression',
                            [
                              [ 'Identifier', 'Thing', [length]: 2 ],
                              [
                                'ArgumentsList',
                                [ [length]: 0 ],
                                [length]: 2
                              ],
                              [length]: 2
                            ],
                            [length]: 2
                          ],
                          [ 'SemicolonSeparator', [length]: 1 ],
                          [length]: 7
                        ],
                        [length]: 2
                      ],
                      [
                        'Comment',
                        '/** method that throws error */',
                        [length]: 2
                      ],
                      [ 'Identifier', 'careful!', [length]: 2 ],
                      [
                        'BlockStatement',
                        [
                          [ 'RestElement', '...', [length]: 2 ],
                          [length]: 1
                        ],
                        [length]: 2
                      ],
                      [
                        'Comment',
                        '/** method with bool return that throws error */',
                        [length]: 2
                      ],
                      [ 'Identifier', 'careful?!', [length]: 2 ],
                      [ 'ColonSeparator', [length]: 1 ],
                      [ 'Type', 'bool', [length]: 2 ],
                      [
                        'BlockStatement',
                        [
                          [ 'RestElement', '...', [length]: 2 ],
                          [length]: 1
                        ],
                        [length]: 2
                      ],
                      [length]: 9
                    ],
                    [length]: 2
                  ],
                  [length]: 17
                ],
                [length]: 2
              ],
              [length]: 29
            ],
            [length]: 2
          ],
          [length]: 2
        ],
        [length]: 2
      ],
      [length]: 3
    ],
    [length]: 2
  ],
  [length]: 1
]