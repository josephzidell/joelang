[
  [
    'Program',
    [
      [
        'Comment',
        '# This is sample .joe file to prove the lexer and parser works.'
      ],
      [
        'Comment',
        '# Note this file may not necessarily be syntatically correct.'
      ],
      [
        'ImportDeclaration',
        [
          [ 'Identifier', 'someFile' ],
          [ 'FromKeyword' ],
          [ 'Path', './some_file.joe' ]
        ]
      ],
      [ 'SemicolonSeparator' ],
      [
        'FunctionDeclaration',
        [
          [ 'Identifier', 'main' ],
          [
            'BlockStatement',
            [
              [ 'Comment', '// instantiate and call a method' ],
              [
                'VariableDeclaration',
                'const',
                [
                  [
                    'AssigneesList',
                    [
                      [ 'Identifier', 'myFoo' ]
                    ]
                  ],
                  [ 'AssignmentOperator' ],
                  [
                    'AssignablesList',
                    [
                      [
                        'CallExpression',
                        [
                          [
                            'MemberExpression',
                            [
                              [ 'Identifier', 'Foo' ],
                              [ 'Identifier', 'create' ]
                            ]
                          ],
                          [ 'ArgumentsList', [] ]
                        ]
                      ]
                    ]
                  ]
                ]
              ],
              [ 'SemicolonSeparator' ],
              [
                'PrintStatement',
                [
                  [
                    'CallExpression',
                    [
                      [
                        'MemberExpression',
                        [
                          [ 'Identifier', 'myFoo' ],
                          [ 'Identifier', 'foo' ]
                        ]
                      ],
                      [ 'ArgumentsList', [] ]
                    ]
                  ]
                ]
              ],
              [ 'SemicolonSeparator' ],
              [ 'Comment', '// static' ],
              [
                'PrintStatement',
                [
                  [
                    'MemberExpression',
                    [
                      [ 'Identifier', 'Foo' ],
                      [ 'Identifier', 'bar' ]
                    ]
                  ]
                ]
              ],
              [ 'SemicolonSeparator' ]
            ]
          ]
        ]
      ],
      [
        'ClassDeclaration',
        [
          [ 'Identifier', 'Foo' ],
          [
            'TypeParametersList',
            [
              [
                'TypeParameter',
                [
                  [ 'Identifier', 'A' ]
                ]
              ]
            ]
          ],
          [
            'ClassExtensionsList',
            [
              [
                'ClassExtension',
                [
                  [ 'Identifier', 'Bar' ],
                  [
                    'TypeArgumentsList',
                    [
                      [ 'Identifier', 'A' ]
                    ]
                  ]
                ]
              ],
              [ 'CommaSeparator' ],
              [
                'ClassExtension',
                [
                  [ 'Identifier', 'Baz' ]
                ]
              ]
            ]
          ],
          [
            'ClassImplementsList',
            [
              [
                'ClassImplement',
                [
                  [ 'Identifier', 'AbstractFooBar' ],
                  [
                    'TypeArgumentsList',
                    [
                      [ 'Identifier', 'A' ]
                    ]
                  ]
                ]
              ],
              [ 'CommaSeparator' ],
              [
                'ClassImplement',
                [
                  [ 'Identifier', 'AnotherAbstractClass' ]
                ]
              ]
            ]
          ],
          [
            'BlockStatement',
            [
              [
                'VariableDeclaration',
                'let',
                [
                  [
                    'AssigneesList',
                    [
                      [ 'Identifier', 'bar' ]
                    ]
                  ],
                  [ 'AssignmentOperator' ],
                  [
                    'AssignablesList',
                    [
                      [ 'StringLiteral', 'baz' ]
                    ]
                  ]
                ]
              ],
              [ 'SemicolonSeparator' ],
              [ 'Comment', '// let' ],
              [
                'VariableDeclaration',
                'const',
                [
                  [
                    'AssigneesList',
                    [
                      [ 'Identifier', 'isDone?' ]
                    ]
                  ],
                  [ 'AssignmentOperator' ],
                  [
                    'AssignablesList',
                    [
                      [ 'BoolLiteral', 'true' ]
                    ]
                  ]
                ]
              ],
              [ 'SemicolonSeparator' ],
              [ 'Comment', '// const' ],
              [
                'FunctionDeclaration',
                [
                  [ 'JoeDoc', '/** method with no args */' ],
                  [ 'Identifier', 'foo' ],
                  [
                    'FunctionReturns',
                    [
                      [ 'Type', 'number' ]
                    ]
                  ],
                  [
                    'BlockStatement',
                    [
                      [
                        'VariableDeclaration',
                        'const',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'size' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'WhenExpression',
                                [
                                  [ 'Identifier', 'someNumber' ],
                                  [
                                    'BlockStatement',
                                    [
                                      [
                                        'WhenCase',
                                        [
                                          [
                                            'WhenCaseValues',
                                            [
                                              [ 'NumberLiteral', '1' ],
                                              [ 'CommaSeparator' ],
                                              [ 'NumberLiteral', '2' ]
                                            ]
                                          ],
                                          [
                                            'WhenCaseConsequent',
                                            [
                                              [
                                                'StringLiteral',
                                                'small'
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      [ 'CommaSeparator' ],
                                      [
                                        'WhenCase',
                                        [
                                          [
                                            'WhenCaseValues',
                                            [
                                              [
                                                'RangeExpression',
                                                [
                                                  [
                                                    'NumberLiteral',
                                                    '3'
                                                  ],
                                                  [
                                                    'NumberLiteral',
                                                    '10'
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ],
                                          [
                                            'WhenCaseConsequent',
                                            [
                                              [
                                                'StringLiteral',
                                                'medium'
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      [ 'CommaSeparator' ],
                                      [
                                        'WhenCase',
                                        [
                                          [
                                            'WhenCaseValues',
                                            [
                                              [ 'NumberLiteral', '11' ]
                                            ]
                                          ],
                                          [
                                            'WhenCaseConsequent',
                                            [
                                              [
                                                'StringLiteral',
                                                'large'
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      [ 'CommaSeparator' ],
                                      [
                                        'WhenCase',
                                        [
                                          [
                                            'WhenCaseValues',
                                            [
                                              [ 'RestElement', '...' ]
                                            ]
                                          ],
                                          [
                                            'WhenCaseConsequent',
                                            [
                                              [
                                                'StringLiteral',
                                                'off the charts'
                                              ]
                                            ]
                                          ]
                                        ]
                                      ],
                                      [ 'CommaSeparator' ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'VariableDeclaration',
                        'let',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'myArray' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'ArrayExpression',
                                [
                                  [ 'NumberLiteral', '1' ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'PostfixIfStatement',
                                    [
                                      [ 'NumberLiteral', '10' ],
                                      [
                                        'MemberExpression',
                                        [
                                          [ 'ThisKeyword' ],
                                          [ 'Identifier', 'isDone?' ]
                                        ]
                                      ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'Comment',
                                    '// if false, element will not be in array'
                                  ],
                                  [ 'NumberLiteral', '3' ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'Comment',
                        '// two new arrays [1, 2, 3] and [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]'
                      ],
                      [
                        'VariableDeclaration',
                        'let',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'count' ],
                              [ 'CommaSeparator' ],
                              [ 'Identifier', 'countDown' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'RangeExpression',
                                [
                                  [ 'NumberLiteral', '1' ],
                                  [
                                    'MemberExpression',
                                    [
                                      [ 'Identifier', 'myArray' ],
                                      [ 'NumberLiteral', '2' ]
                                    ]
                                  ]
                                ]
                              ],
                              [ 'CommaSeparator' ],
                              [
                                'RangeExpression',
                                [
                                  [
                                    'MemberExpression',
                                    [
                                      [ 'Identifier', 'myArray' ],
                                      [ 'NumberLiteral', '1' ]
                                    ]
                                  ],
                                  [ 'NumberLiteral', '0' ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'VariableDeclaration',
                        'let',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'partitionedArray' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'ArrayExpression',
                                [
                                  [
                                    'MemberListExpression',
                                    [
                                      [ 'Identifier', 'countDown' ],
                                      [
                                        'MemberList',
                                        [
                                          [
                                            'RangeExpression',
                                            [
                                              [ 'NumberLiteral', '0' ],
                                              [ 'NumberLiteral', '1' ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'MemberListExpression',
                                    [
                                      [ 'Identifier', 'countDown' ],
                                      [
                                        'MemberList',
                                        [
                                          [
                                            'RangeExpression',
                                            [
                                              [ 'NumberLiteral', '2' ],
                                              [ 'NumberLiteral', '6' ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'MemberListExpression',
                                    [
                                      [ 'Identifier', 'countDown' ],
                                      [
                                        'MemberList',
                                        [
                                          [
                                            'RangeExpression',
                                            [
                                              [ 'NumberLiteral', '7' ],
                                              [
                                                'UnaryExpression',
                                                '-',
                                                { before: true },
                                                [
                                                  [
                                                    'NumberLiteral',
                                                    '1'
                                                  ]
                                                ]
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'Comment',
                        '// new nested Arrays [[10, 9], [8, 7, 6, 5, 4], [3, 2, 1, 0]]'
                      ],
                      [
                        'ForStatement',
                        [
                          [
                            'VariableDeclaration',
                            'const',
                            [
                              [
                                'AssigneesList',
                                [
                                  [ 'Identifier', 'num' ]
                                ]
                              ]
                            ]
                          ],
                          [ 'InKeyword' ],
                          [
                            'MemberListExpression',
                            [
                              [ 'Identifier', 'countDown' ],
                              [
                                'MemberList',
                                [
                                  [ 'NumberLiteral', '1' ],
                                  [ 'CommaSeparator' ],
                                  [ 'NumberLiteral', '4' ],
                                  [ 'CommaSeparator' ],
                                  [ 'NumberLiteral', '9' ]
                                ]
                              ]
                            ]
                          ],
                          [
                            'BlockStatement',
                            [
                              [ 'Comment', '// new array [9, 6, 1]' ],
                              [
                                'PrintStatement',
                                [
                                  [ 'Identifier', 'num' ]
                                ]
                              ],
                              [ 'SemicolonSeparator' ]
                            ]
                          ]
                        ]
                      ],
                      [
                        'VariableDeclaration',
                        'let',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'myObject' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'ObjectExpression',
                                [
                                  [
                                    'Property',
                                    [
                                      [ 'Identifier', 'a' ],
                                      [ 'NumberLiteral', '1' ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'Property',
                                    [
                                      [ 'Identifier', 'b' ],
                                      [ 'StringLiteral', 'coat' ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'Property',
                                    [
                                      [ 'Identifier', 'c' ],
                                      [
                                        'TernaryExpression',
                                        [
                                          [
                                            'TernaryCondition',
                                            [
                                              [ 'Identifier', 'cond' ]
                                            ]
                                          ],
                                          [
                                            'TernaryConsequent',
                                            [
                                              [ 'BoolLiteral', 'true' ]
                                            ]
                                          ],
                                          [
                                            'TernaryAlternate',
                                            [
                                              [
                                                'BoolLiteral',
                                                'false'
                                              ]
                                            ]
                                          ]
                                        ]
                                      ]
                                    ]
                                  ],
                                  [ 'CommaSeparator' ],
                                  [
                                    'Comment',
                                    '// regular ternary - property will always be there, value differs'
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'LoopStatement',
                        [
                          [
                            'BlockStatement',
                            [
                              [ 'NextStatement' ],
                              [ 'SemicolonSeparator' ],
                              [ 'DoneStatement' ],
                              [ 'SemicolonSeparator' ]
                            ]
                          ]
                        ]
                      ],
                      [ 'Comment', '// assign multiple variables' ],
                      [
                        'VariableDeclaration',
                        'const',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'myBool' ],
                              [ 'CommaSeparator' ],
                              [ 'Identifier', 'myNumber' ],
                              [ 'CommaSeparator' ],
                              [ 'Identifier', 'myThing' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'CallExpression',
                                [
                                  [
                                    'Identifier',
                                    'methodThatReturnsBool?'
                                  ],
                                  [ 'ArgumentsList', [] ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'VariableDeclaration',
                        'const',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'myTuple' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'TupleExpression',
                                [
                                  [ 'NumberLiteral', '1' ],
                                  [ 'CommaSeparator' ],
                                  [ 'BoolLiteral', 'true' ],
                                  [ 'CommaSeparator' ],
                                  [ 'StringLiteral', 'string' ],
                                  [ 'CommaSeparator' ],
                                  [ 'Path', '@/foo' ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'VariableDeclaration',
                        'let',
                        [
                          [
                            'AssigneesList',
                            [
                              [ 'Identifier', 'partialObj' ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [
                                'MemberListExpression',
                                [
                                  [ 'Identifier', 'myObject' ],
                                  [
                                    'MemberList',
                                    [
                                      [ 'Identifier', 'a' ],
                                      [ 'CommaSeparator' ],
                                      [ 'Identifier', 'd' ]
                                    ]
                                  ]
                                ]
                              ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [ 'Comment', "// new object {a: 1, d: 'foo'}" ],
                      [
                        'VariableDeclaration',
                        'let',
                        [
                          [
                            'AssigneesList',
                            [
                              [
                                'Identifier',
                                'initializeAndAssignLater'
                              ]
                            ]
                          ],
                          [ 'ColonSeparator' ],
                          [
                            'TypeArgumentsList',
                            [
                              [ 'Type', 'number' ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'AssignmentExpression',
                        [
                          [
                            'AssigneesList',
                            [
                              [
                                'Identifier',
                                'initializeAndAssignLater'
                              ]
                            ]
                          ],
                          [ 'AssignmentOperator' ],
                          [
                            'AssignablesList',
                            [
                              [ 'NumberLiteral', '5' ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ],
                      [
                        'ReturnStatement',
                        [
                          [ 'Identifier', 'initializeAndAssignLater' ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ]
                    ]
                  ]
                ]
              ],
              [
                'FunctionDeclaration',
                [
                  [ 'JoeDoc', '/** with args */' ],
                  [ 'Identifier', 'methodWithArgs' ],
                  [
                    'ParametersList',
                    [
                      [
                        'Parameter',
                        [
                          [ 'Identifier', 'arg1' ],
                          [ 'ColonSeparator' ],
                          [ 'Type', 'bool' ]
                        ]
                      ],
                      [ 'CommaSeparator' ],
                      [
                        'Parameter',
                        [
                          [ 'Identifier', 'arg2' ],
                          [ 'ColonSeparator' ],
                          [ 'Identifier', 'Tuple' ]
                        ]
                      ],
                      [ 'CommaSeparator' ],
                      [
                        'Parameter',
                        [
                          [ 'Identifier', 'arg3' ],
                          [ 'AssignmentOperator' ],
                          [ 'BoolLiteral', 'true' ]
                        ]
                      ],
                      [ 'CommaSeparator' ],
                      [
                        'Parameter',
                        [
                          [ 'RestElement', '...' ],
                          [ 'Identifier', 'otherStuff' ],
                          [ 'ColonSeparator' ],
                          [
                            'ArrayOf',
                            [
                              [ 'Identifier', 'Thing' ]
                            ]
                          ]
                        ]
                      ]
                    ]
                  ],
                  [
                    'BlockStatement',
                    [
                      [ 'Comment', '/* ... */' ]
                    ]
                  ]
                ]
              ],
              [
                'FunctionDeclaration',
                [
                  [ 'JoeDoc', '/** with one return val */' ],
                  [ 'Identifier', 'methodThatReturnsBool?' ],
                  [
                    'FunctionReturns',
                    [
                      [ 'Type', 'bool' ]
                    ]
                  ],
                  [
                    'BlockStatement',
                    [
                      [
                        'ReturnStatement',
                        [
                          [ 'BoolLiteral', 'true' ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ]
                    ]
                  ]
                ]
              ],
              [
                'FunctionDeclaration',
                [
                  [ 'JoeDoc', '/** multiple return vals */' ],
                  [ 'Identifier', 'methodThatReturnsBool?' ],
                  [
                    'FunctionReturns',
                    [
                      [ 'Type', 'bool' ],
                      [ 'CommaSeparator' ],
                      [ 'Type', 'number' ],
                      [ 'CommaSeparator' ],
                      [ 'Identifier', 'Thing' ]
                    ]
                  ],
                  [
                    'BlockStatement',
                    [
                      [
                        'ReturnStatement',
                        [
                          [ 'BoolLiteral', 'false' ],
                          [ 'CommaSeparator' ],
                          [ 'NumberLiteral', '5' ],
                          [ 'CommaSeparator' ],
                          [
                            'CallExpression',
                            [
                              [
                                'MemberExpression',
                                [
                                  [ 'Identifier', 'Thing' ],
                                  [ 'Identifier', 'create' ]
                                ]
                              ],
                              [ 'ArgumentsList', [] ]
                            ]
                          ]
                        ]
                      ],
                      [ 'SemicolonSeparator' ]
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]
      ]
    ]
  ]
]