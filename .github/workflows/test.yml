name: Test Joelang Compiler

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

env:
  LLVM_VERSION: 14.0.6
  LLVM_VERSION_MAJOR: 14

jobs:
  test:
    strategy:
      matrix:
        os:
        # - ubuntu-22.04
        - windows-2022
        # - macos-12
        node: [18]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}
        check-latest: true

    - name: Install LLVM on macOS
      if: startsWith(matrix.os, 'macos')
      run: |
        brew update
        brew upgrade
        brew install llvm@${{ env.LLVM_VERSION_MAJOR }}
        echo "/usr/local/opt/llvm@${{ env.LLVM_VERSION_MAJOR }}/bin" >> $GITHUB_PATH
    - name: Install LLVM on Ubuntu
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo wget https://apt.llvm.org/llvm.sh
        sudo chmod +x llvm.sh
        sudo ./llvm.sh ${{ env.LLVM_VERSION_MAJOR }}
        echo "/usr/lib/llvm-${{ env.LLVM_VERSION_MAJOR }}/bin" >> $GITHUB_PATH
    - name: Install LLVM on Windows
      if: startsWith(matrix.os, 'windows')
      run: |
        $LLVM_PREBUILT_FILE = "llvm-${{ env.LLVM_VERSION }}-${{ matrix.os }}.zip"
        curl -sLO https://github.com/ApsarasX/llvm-windows/releases/download/llvmorg-${{ env.LLVM_VERSION }}/$LLVM_PREBUILT_FILE
        Expand-Archive -Path $LLVM_PREBUILT_FILE -DestinationPath .
        echo "Dir $pwd\LLVM-${{ env.LLVM_VERSION }}-win64\lib\cmake\llvm"
        dir "$pwd\LLVM-${{ env.LLVM_VERSION }}-win64\lib\cmake\llvm"
        echo "LLVM_DIR=$pwd\LLVM-${{ env.LLVM_VERSION }}-win64\lib\cmake\llvm" >> "$GITHUB_ENV"
        echo "$pwd\LLVM-${{ env.LLVM_VERSION_MAJOR }}\bin" >> $GITHUB_PATH

    # - name: Install LLVM and GCC (Ubuntu)
    #   if: runner.os == 'Linux'
    #   run: |
    #     wget https://apt.llvm.org/llvm.sh
    #     sudo chmod +x llvm.sh
    #     sudo ./llvm.sh 15 all
    #     sudo apt-get update
    #     # sudo apt-get install -y llvm clang gcc
    #     sudo apt-get install -y cmake zlib1g-dev

    # - name: Install LLVM and GCC (macOS)
    #   if: runner.os == 'macOS'
    #   run: |
    #     brew install cmake llvm@15
    #     brew install gcc

    # - name: Install LLVM and GCC (Windows)
    #   if: runner.os == 'Windows'
    #   run: |
    #     # choco install llvm --version=15.0.7
    #     # choco install mingw
    #     llvm-config --cmakedir
    #     npm config set cmake_LLVM_DIR C:\Users\dev\llvm-13.0.1.src\build\lib\cmake\llvm

    - name: Install dependencies
      run: npm install

    - name: Build project and run tests
      run: |
        npm run build
        npx jest -- e2e.spec.js
